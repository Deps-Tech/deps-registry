name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: windows
            arch: amd64
            runner: windows-latest
            ext: .exe
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            ext: ''
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            ext: ''
          - os: darwin
            arch: amd64
            runner: macos-latest
            ext: ''
          - os: darwin
            arch: arm64
            runner: macos-latest
            ext: ''

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build
        working-directory: ./tools
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o ../tools-cli-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tools-cli-${{ matrix.os }}-${{ matrix.arch }}
          path: tools-cli-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

