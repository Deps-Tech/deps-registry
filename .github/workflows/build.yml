name: Build and Pre-release

on:
  push:
    branches:
      - main
    paths:
      - 'tools/**'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: windows
            arch: amd64
            runner: windows-latest
            ext: .exe
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            ext: ''
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            ext: ''
          - os: darwin
            arch: amd64
            runner: macos-latest
            ext: ''
          - os: darwin
            arch: arm64
            runner: macos-latest
            ext: ''

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache-dependency-path: tools/go.sum

      - name: Set version
        id: version
        run: |
          VERSION="auto.$(date -u +%Y.%m.%d-%H%M%S)"
          COMMIT_SHA="${{ github.sha }}"
          BUILD_DATE="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "commit=${COMMIT_SHA}" >> $GITHUB_OUTPUT
          echo "date=${BUILD_DATE}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build
        working-directory: ./tools
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.version }} -X main.CommitSHA=${{ steps.version.outputs.commit }} -X main.BuildDate=${{ steps.version.outputs.date }}" -o ../tools-cli-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} ./cmd/tools-cli

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tools-cli-${{ matrix.os }}-${{ matrix.arch }}
          path: tools-cli-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          retention-days: 7

  pre-release:
    name: Create Pre-release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten artifacts
        run: |
          mkdir -p release
          find artifacts -type f -exec mv {} release/ \;

      - name: Set version
        id: version
        run: |
          VERSION="auto.$(date -u +%Y.%m.%d-%H%M%S)"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Delete existing pre-release
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release delete latest-auto --yes --repo ${{ github.repository }} || true
          git push --delete origin latest-auto || true

      - name: Create Pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-auto
          name: "Latest Auto Build (${{ steps.version.outputs.version }})"
          files: release/*
          draft: false
          prerelease: true
          body: |
            **Automatic pre-release build**
            
            Version: `${{ steps.version.outputs.version }}`
            Commit: `${{ github.sha }}`
            
            This is an automatically generated pre-release from the latest main branch.
            For stable releases, see [Releases](https://github.com/${{ github.repository }}/releases).
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
